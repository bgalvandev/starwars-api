# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: bgalvandev
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: starwars-api
# "service" is the name of this project. This will also be added to your AWS resource names.
service: starwars-api

provider:
  name: aws
  runtime: nodejs20.x
  region: ${env:AWS_REGION}
  httpApi:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${env:DYNAMODB_TABLE}
  environment:
    DYNAMODB_TABLE: ${env:DYNAMODB_TABLE}

resources:
  Resources:
    PeopleTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${env:DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

functions:
  api:
    handler: dist/handler.handler
    events:
      - httpApi: "*"

plugins:
  - serverless-offline
